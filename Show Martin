package me.zhadowseb.scastleplugin;

import org.bukkit.*;
import org.bukkit.entity.*;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.*;
import org.bukkit.event.weather.WeatherChangeEvent;

public class EntityHandler implements Listener{

    @EventHandler
    public void onEntityTarget(EntityTargetEvent e) {
        if(e.getEntity() instanceof Zombie){
            if(e.getEntity().getLocation().distance(e.getTarget().getLocation()) <= 8){
                e.setCancelled(true);
            }
        }
    }

    @EventHandler
    public void onSpawn(EntitySpawnEvent e){

        if(e.getEntity() instanceof Zombie){
            Zombie z = (Zombie) e.getEntity();
            z.setCustomName(ChatColor.GRAY + "" + ChatColor.BOLD + "Wave: " + ChatColor.GREEN + "1");
            z.setCustomNameVisible(true);
            zombieTargetBlock(z);
        }
    }

    @EventHandler
    public void entityHurt(EntityDamageByEntityEvent e){
        if(e.getEntity() instanceof Zombie && e.getDamager() instanceof Player){
            ((Zombie) e.getEntity()).setTarget(((Player) e.getDamager()).getPlayer());
        }

        if(e.getEntity() instanceof Bat && e.getDamager() instanceof Zombie && ((Bat) e.getEntity()).getHealth() <= 3){
            Bat b = (Bat) e.getEntity();
            Zombie z = (Zombie) e.getDamager();
            Location damageLoc = new Location(b.getWorld(), b.getLocation().getX(), b.getLocation().getY(), b.getLocation().getZ());

            if(b.getCustomName().equalsIgnoreCase("x-")){
                damageLoc.setX(damageLoc.getX() + 1);
            } else if (b.getCustomName().equalsIgnoreCase("x+")){
                damageLoc.setX(damageLoc.getX() - 1);
            } else if (b.getCustomName().equalsIgnoreCase("z-")){
                damageLoc.setZ(damageLoc.getZ() + 1);
            } else if (b.getCustomName().equalsIgnoreCase("z+")){
                damageLoc.setZ(damageLoc.getZ() - 1);
            }

            b.getWorld().getBlockAt(damageLoc).setType(Material.AIR);
            zombieTargetBlock(z);
        }

        if(e.getEntity() instanceof Bat && e.getDamager() instanceof Player && e.getEntity().isCustomNameVisible() == true){
            e.setCancelled(false); //SET TO TRUE WHEN DONE TESTING!
        }
    }

    @EventHandler
    public void onCombust(EntityCombustEvent e) {
        if (e.getEntity() instanceof Zombie) {
            e.setCancelled(true);
        }
    }

    @EventHandler
    public void onRain(WeatherChangeEvent e){
        e.setCancelled(true);
        e.getWorld().setStorm(false);
    }

    public void zombieTargetBlock(Zombie z){

        World world = z.getWorld();
        Location zLoc = z.getEyeLocation();
        Location batLoc = new Location(world, 0,0,0);
        Location loc = new Location(world, 0,0,0);
        Boolean bFound = false;

        for (int i = 0; i < 17; i++){
            for(int i2 = 0; i2 < 17; i2++){
                for (int i3 = 0; i3 <= 1; i3++){
                    Location tempBlock = new Location(world, zLoc.getX() + (i2 - 8), zLoc.getY() - i3, zLoc.getZ() + (i - 8));
                    if(! (world.getBlockAt(tempBlock).getType() == Material.AIR)){
                        bFound = true;
                        loc.setX(zLoc.getX() + (i2 - 8));
                        loc.setY(zLoc.getY() - i3);
                        loc.setZ(zLoc.getZ() + (i - 8));

                        if(batLoc.distance(zLoc) > loc.distance(zLoc)){
                            batLoc.setX(loc.getX());
                            batLoc.setY(loc.getY());
                            batLoc.setZ(loc.getZ());
                        }
                    }
                }
            }
            if(i == 16 && bFound == false){
                //Find player.
            }
        }

        if(bFound == true){
            double block1 = 0;
            double block2 = 0;
            double block3 = 0;
            double block4 = 0;
            Location lBlock1 = new Location(world, (batLoc.getX() - 1), batLoc.getY(),(batLoc.getZ()));
            Location lBlock2 = new Location(world, (batLoc.getX() + 1), batLoc.getY(),(batLoc.getZ()));
            Location lBlock3 = new Location(world, batLoc.getX(), batLoc.getY(),(batLoc.getZ() - 1));
            Location lBlock4 = new Location(world, batLoc.getX(), batLoc.getY(),(batLoc.getZ() + 1));

            block1 = zLoc.distance(lBlock1);
            block2 = zLoc.distance(lBlock2);
            block3 = zLoc.distance(lBlock3);
            block4 = zLoc.distance(lBlock4);

            String batName = "";

            if(block1 <= block2 && block1 <= block3 && block1 <= block4 && lBlock1.getBlock().getType() == Material.AIR){
                batLoc.setX(batLoc.getX() - 1);
                batName = "x-";
            } else if(block2 <= block1 && block2 <= block3 && block2 <= block4 && lBlock2.getBlock().getType() == Material.AIR){
                batLoc.setX(batLoc.getX() + 1);
                batName = "x+";
            } else if(block3 <= block1 && block3 <= block2 && block3 <= block4 && lBlock3.getBlock().getType() == Material.AIR){
                batLoc.setZ(batLoc.getZ() - 1);
                batName = "z-";
            } else if(block4 <= block1 && block4 <= block2 && block4 <= block3 && lBlock4.getBlock().getType() == Material.AIR){
                batLoc.setZ(batLoc.getZ() + 1);
                batName = "z+";
            }

            Bat bat = (Bat) world.spawnEntity(batLoc, EntityType.BAT);
            bat.setInvisible(true);
            bat.setCustomName(batName);
            bat.setAI(false);
            bat.setCollidable(false);
            bat.setCustomNameVisible(true);
            bat.setSilent(true);
            z.setTarget(bat);
            bat.setMaxHealth(4);
            bat.setHealth(4);
        }
    }
}
